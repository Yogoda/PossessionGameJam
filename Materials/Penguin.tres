[gd_resource type="ShaderMaterial" load_steps=5 format=2]

[ext_resource path="res://Materials/color_map.png" type="Texture" id=1]

[sub_resource type="VisualShaderNodeTexture" id=1]
output_port_for_preview = 0
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeInput" id=2]
input_name = "uv"

[sub_resource type="VisualShader" id=3]
code = "shader_type spatial;
render_mode ambient_light_disabled, vertex_lighting;

uniform sampler2D tex_frg_2;


void vertex() {
// Output:0

}

void fragment() {
// Input:5
	vec3 n_out5p0;
	n_out5p0 = vec3(UV,0.0);

// Texture:2
	vec3 n_out2p0;
	float n_out2p1;
	vec4 tex_frg_2_read = texture( tex_frg_2 , n_out5p0.xy );
	n_out2p0 = tex_frg_2_read.rgb;
	n_out2p1 = tex_frg_2_read.a;

// Output:0
	ALBEDO = n_out2p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -51, -34.25 )
flags/ambient_light_disabled = true
flags/vertex_lighting = true
nodes/fragment/0/position = Vector2( 740, 0 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( 400, 40 )
nodes/fragment/5/node = SubResource( 2 )
nodes/fragment/5/position = Vector2( 80, 80 )
nodes/fragment/connections = PoolIntArray( 2, 0, 0, 0, 5, 0, 2, 0 )

[resource]
shader = SubResource( 3 )

