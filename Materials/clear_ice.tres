[gd_resource type="ShaderMaterial" load_steps=5 format=2]

[sub_resource type="VisualShaderNodeColorConstant" id=1]
output_port_for_preview = 0
constant = Color( 0.164706, 1, 0.85098, 0.792157 )

[sub_resource type="VisualShaderNodeScalarConstant" id=2]

[sub_resource type="VisualShaderNodeScalarConstant" id=3]
constant = 1.0

[sub_resource type="VisualShader" id=4]
code = "shader_type spatial;



void vertex() {
// Output:0

}

void fragment() {
// Color:2
	vec3 n_out2p0;
	float n_out2p1;
	n_out2p0 = vec3(0.164706,1.000000,0.850980);
	n_out2p1 = 0.792157;

// Scalar:4
	float n_out4p0;
	n_out4p0 = 1.000000;

// Scalar:3
	float n_out3p0;
	n_out3p0 = 0.000000;

// Output:0
	ALBEDO = n_out2p0;
	ALPHA = n_out2p1;
	METALLIC = n_out4p0;
	ROUGHNESS = n_out3p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 59, -156.5 )
nodes/fragment/0/position = Vector2( 660, -100 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( 140, -40 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( 200, 200 )
nodes/fragment/4/node = SubResource( 3 )
nodes/fragment/4/position = Vector2( 360, 20 )
nodes/fragment/connections = PoolIntArray( 2, 0, 0, 0, 2, 1, 0, 1, 3, 0, 0, 3, 4, 0, 0, 2 )

[resource]
shader = SubResource( 4 )

